declare class FSHLexer extends antlr4.Lexer {
    static grammarFileName: string;
    static channelNames: string[];
    static modeNames: string[];
    static literalNames: string[];
    static symbolicNames: string[];
    static ruleNames: string[];
    constructor(input: any);
    _interp: any;
    get atn(): any;
}
declare namespace FSHLexer {
    const EOF: number;
    const KW_ALIAS: number;
    const KW_PROFILE: number;
    const KW_EXTENSION: number;
    const KW_INSTANCE: number;
    const KW_INSTANCEOF: number;
    const KW_INVARIANT: number;
    const KW_VALUESET: number;
    const KW_CODESYSTEM: number;
    const KW_RULESET: number;
    const KW_MAPPING: number;
    const KW_LOGICAL: number;
    const KW_RESOURCE: number;
    const KW_PARENT: number;
    const KW_ID: number;
    const KW_TITLE: number;
    const KW_DESCRIPTION: number;
    const KW_EXPRESSION: number;
    const KW_XPATH: number;
    const KW_SEVERITY: number;
    const KW_USAGE: number;
    const KW_SOURCE: number;
    const KW_TARGET: number;
    const KW_CONTEXT: number;
    const KW_CHARACTERISTICS: number;
    const KW_MOD: number;
    const KW_MS: number;
    const KW_SU: number;
    const KW_TU: number;
    const KW_NORMATIVE: number;
    const KW_DRAFT: number;
    const KW_FROM: number;
    const KW_EXAMPLE: number;
    const KW_PREFERRED: number;
    const KW_EXTENSIBLE: number;
    const KW_REQUIRED: number;
    const KW_CONTAINS: number;
    const KW_NAMED: number;
    const KW_AND: number;
    const KW_ONLY: number;
    const KW_OR: number;
    const KW_OBEYS: number;
    const KW_TRUE: number;
    const KW_FALSE: number;
    const KW_INCLUDE: number;
    const KW_EXCLUDE: number;
    const KW_CODES: number;
    const KW_WHERE: number;
    const KW_VSREFERENCE: number;
    const KW_SYSTEM: number;
    const KW_EXACTLY: number;
    const KW_INSERT: number;
    const KW_CONTENTREFERENCE: number;
    const EQUAL: number;
    const STAR: number;
    const COLON: number;
    const COMMA: number;
    const ARROW: number;
    const STRING: number;
    const MULTILINE_STRING: number;
    const NUMBER: number;
    const UNIT: number;
    const CODE: number;
    const CONCEPT_STRING: number;
    const DATETIME: number;
    const TIME: number;
    const CARD: number;
    const REFERENCE: number;
    const CODEABLE_REFERENCE: number;
    const CANONICAL: number;
    const CARET_SEQUENCE: number;
    const REGEX: number;
    const BLOCK_COMMENT: number;
    const SEQUENCE: number;
    const WHITESPACE: number;
    const LINE_COMMENT: number;
    const PARAM_RULESET_REFERENCE: number;
    const RULESET_REFERENCE: number;
    const BRACKETED_PARAM: number;
    const LAST_BRACKETED_PARAM: number;
    const PLAIN_PARAM: number;
    const LAST_PLAIN_PARAM: number;
    const QUOTED_CONTEXT: number;
    const LAST_QUOTED_CONTEXT: number;
    const UNQUOTED_CONTEXT: number;
    const LAST_UNQUOTED_CONTEXT: number;
    const CONTEXT_WHITESPACE: number;
    const CODE_ITEM: number;
    const LAST_CODE_ITEM: number;
    const CODE_LIST_WHITESPACE: number;
    const RULESET_OR_INSERT: number;
    const PARAM_RULESET_OR_INSERT: number;
    const LIST_OF_CONTEXTS: number;
    const LIST_OF_CODES: number;
}
export default FSHLexer;
import antlr4 from "antlr4";
